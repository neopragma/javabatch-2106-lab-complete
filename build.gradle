buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:org.springframework.boot.gradle.plugin:2.5.0' //requires gradle 6.8.2 or later
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.1.2'
        
        // gradle cannot find the liberty plugin
        // possible workaround found at https://github.com/OpenLiberty/ci.gradle 
        // but this was not necessary in the guide-gradle-intro sample project (?)
        classpath ('io.openliberty.tools:liberty-ant-tasks:1.9.7')
        classpath ('io.openliberty.tools:ci.common:1.8.13')
    }
}

plugins {
	id 'org.springframework.boot' version '2.3.10.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
	id 'war'
	// part of workaround for liberty plugin
	id "io.openliberty.tools.gradle.Liberty" version "3.1.2"
}

group = 'javabatch.lab'
version = '0.0.1'

sourceCompatibility = '1.8'
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
	mavenCentral()
}

bootJar {
    baseName = 'JavaBatch'
    launchScript()
}

bootWar {
    baseName = 'JavaBatch'
    launchScript()
}

dependencies {
    implementation 'org.mockito:mockito-core:3.10.0'

    implementation 'org.springframework.boot:org.springframework.boot.gradle.plugin:2.4.3'
    
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    runtimeOnly 'org.hsqldb:hsqldb'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // provided dependencies
    providedCompile 'jakarta.platform:jakarta.jakartaee-api:8.0.0'
    providedCompile 'org.eclipse.microprofile:microprofile:3.3'

    // test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'commons-httpclient:commons-httpclient:3.1'
}

ext  {
    liberty.server.var.'default.http.port' = '9090'
    liberty.server.var.'default.https.port' = '9443'
    liberty.server.var.'app.context.root' = project.name
}

task openBrowser {
    description = 'Open browser to the running application'
    doLast {
        String port = liberty.server.var.'default.http.port'
        String context = liberty.server.var.'app.context.root'
        String URL = "http://localhost:" + port + "/" + context + "/" + "servlet"
        java.awt.Desktop.desktop.browse URL.toURI()
        java.awt.Desktop.desktop.browse file("$buildDir/reports/tests/test/index.html").toURI()
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut'
        exceptionFormat 'full'
    }
    systemProperty 'http.port', liberty.server.var.'default.http.port'
    systemProperty 'context.root',  liberty.server.var.'app.context.root'
}

//test.dependsOn 'libertyStart'
//test.finalizedBy(openBrowser)
//clean.dependsOn 'libertyStop'

